


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 2 - Matrix Multiplication
    4 00000000         ;
    5 00000000         
    6 00000000 00000004 
                       N       EQU              4
    7 00000000         
    8 00000000                 AREA             globals, DATA, READWRITE
    9 00000000         
   10 00000000         ; result array
   11 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       ARR_R   SPACE            N*N*4       ; N*N words (4 byte
                                                            s each)
   12 00000040         
   13 00000040         
   14 00000040                 AREA             RESET, CODE, READONLY
   15 00000000                 ENTRY
   16 00000000         
   17 00000000         ; initialize system stack pointer (SP)
   18 00000000 E59FD0FC        LDR              SP, =0x40010000
   19 00000004         
   20 00000004         ;
   21 00000004         ; write your matrix multiplication program here
   22 00000004         ;
   23 00000004         
   24 00000004 E3A08004        LDR              R8, =N
   25 00000008 E59F10F8        LDR              R1, =ARR_A
   26 0000000C E59F20F8        LDR              R2, =ARR_B
   27 00000010         
   28 00000010 E59F30F8        LDR              R3, =ARR_R
   29 00000014 E3A04000        LDR              R4, =0      ; for (i = 0; i < N
                                                            ;) {
   30 00000018 E1540008 
                       for_i   CMP              R4, R8      ;  
   31 0000001C 2A000017        BHS              endF_i      ; 
   32 00000020 E3A05000        LDR              R5, =0      ;  
   33 00000024 E1550008 
                       for_j   CMP              R5, R8      ;  for(j = 0; j < N



ARM Macro Assembler    Page 2 


                                                            ;) {
   34 00000028 2A000012        BHS              endF_j      ; 
   35 0000002C E3A07000        LDR              R7, =0      ;  r = 0;
   36 00000030 E3A06000        LDR              R6, =0      ;   
   37 00000034 E1560008 
                       for_k   CMP              R6, R8      ;   for (k = 0; k <
                                                             N;) {
   38 00000038 2A000009        BHS              endF_k      ; 
   39 0000003C E0000894        MUL              R0, R4, R8  ;   index = i*N;
   40 00000040 E0800006        ADD              R0, R0, R6  ;    index += k;
   41 00000044 E7919100        LDR              R9, [R1, R0, LSL #2] ;    valA 
                                                            = A[ARR_A + index*4
                                                            ];
   42 00000048 E0000896        MUL              R0, R6, R8  ;    index = k*N;
   43 0000004C E0800005        ADD              R0, R0, R5  ;    index += j;
   44 00000050 E792A100        LDR              R10, [R2, R0, LSL #2] ;    valB
                                                             = B[ARR_B + index*
                                                            4];
   45 00000054 E009099A        MUL              R9, R10, R9 ;    valA *= valB;
   46 00000058 E0877009        ADD              R7, R7, R9  ;    r = r + (A[i,k
                                                            ] * B[k,j]);
   47 0000005C E2866001        ADD              R6, R6, #1  ;           k++;
   48 00000060 EAFFFFF3        B                for_k       ;  }
   49 00000064 E0000894 
                       endF_k  MUL              R0, R4, R8  ;    index = i*N;
   50 00000068 E0800005        ADD              R0, R0, R5  ;    index += j;
   51 0000006C E7837100        STR              R7, [R3, R0, LSL #2] 
                                                            ;    R[i,j] = r;
   52 00000070 E2855001        ADD              R5, R5, #1  ;    j++;
   53 00000074 EAFFFFEA        B                for_j       ; }
   54 00000078 E2844001 
                       endF_j  ADD              R4, R4, #1  ;    i++;
   55 0000007C EAFFFFE5        B                for_i       ; }
   56 00000080         endF_i
   57 00000080         
   58 00000080         
   59 00000080 EAFFFFFE 
                       STOP    B                STOP
   60 00000084         
   61 00000084         
   62 00000084         ;
   63 00000084         ; test data
   64 00000084         ;
   65 00000084         
   66 00000084 00000001 
              00000002 
              00000003 
              00000004 ARR_A   DCD              1,  2,  3,  4
   67 00000094 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   68 000000A4 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   69 000000B4 0000000D 
              0000000E 
              0000000F 



ARM Macro Assembler    Page 3 


              00000010         DCD              13, 14, 15, 16
   70 000000C4         
   71 000000C4 00000001 
              00000002 
              00000003 
              00000004 ARR_B   DCD              1,  2,  3,  4
   72 000000D4 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   73 000000E4 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   74 000000F4 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   75 00000104         
   76 00000104                 END
              40010000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab2-matmul.d -o.\objects\lab2-matmul.o -IC:\Keil_v5\ARM\RV31\INC -IC:\K
eil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 
1" --predefine="__UVISION_VERSION SETA 528" --list=.\listings\lab2-matmul.lst l
ab2-matmul.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_R 00000000

Symbol: ARR_R
   Definitions
      At line 11 in file lab2-matmul.s
   Uses
      At line 28 in file lab2-matmul.s
Comment: ARR_R used once
globals 00000000

Symbol: globals
   Definitions
      At line 8 in file lab2-matmul.s
   Uses
      None
Comment: globals unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_A 00000084

Symbol: ARR_A
   Definitions
      At line 66 in file lab2-matmul.s
   Uses
      At line 25 in file lab2-matmul.s
Comment: ARR_A used once
ARR_B 000000C4

Symbol: ARR_B
   Definitions
      At line 71 in file lab2-matmul.s
   Uses
      At line 26 in file lab2-matmul.s
Comment: ARR_B used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 14 in file lab2-matmul.s
   Uses
      None
Comment: RESET unused
STOP 00000080

Symbol: STOP
   Definitions
      At line 59 in file lab2-matmul.s
   Uses
      At line 59 in file lab2-matmul.s
Comment: STOP used once
endF_i 00000080

Symbol: endF_i
   Definitions
      At line 56 in file lab2-matmul.s
   Uses
      At line 31 in file lab2-matmul.s
Comment: endF_i used once
endF_j 00000078

Symbol: endF_j
   Definitions
      At line 54 in file lab2-matmul.s
   Uses
      At line 34 in file lab2-matmul.s
Comment: endF_j used once
endF_k 00000064

Symbol: endF_k
   Definitions
      At line 49 in file lab2-matmul.s
   Uses
      At line 38 in file lab2-matmul.s
Comment: endF_k used once
for_i 00000018

Symbol: for_i



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 30 in file lab2-matmul.s
   Uses
      At line 55 in file lab2-matmul.s
Comment: for_i used once
for_j 00000024

Symbol: for_j
   Definitions
      At line 33 in file lab2-matmul.s
   Uses
      At line 53 in file lab2-matmul.s
Comment: for_j used once
for_k 00000034

Symbol: for_k
   Definitions
      At line 37 in file lab2-matmul.s
   Uses
      At line 48 in file lab2-matmul.s
Comment: for_k used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000004

Symbol: N
   Definitions
      At line 6 in file lab2-matmul.s
   Uses
      At line 11 in file lab2-matmul.s
      At line 11 in file lab2-matmul.s
      At line 24 in file lab2-matmul.s

1 symbol
347 symbols in table
